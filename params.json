{
  "name": "Pink",
  "tagline": "Pink read an Eclipse Capella model and extract some information in order to make basics reports",
  "body": "###  Pink, pourquoi ? \r\n\r\nIngénieur système, j'ai de plus en plus affaire au MBSE et au sysML (UML based). L'architecture système étant proche de l'architecture logicielle, outre l'UML, d'autres outils ont été repris dans cette discipline comme la base Eclipse pour réaliser les modèles opérationnels, fonctionnels et organiques. \r\n\r\nPar contre, contrairement au monde de l'informatique ou l'architecte sait se bricoler quelques scripts, l'ingénieur système n'est pas toujours à l'aise avec le développement de scripts et d'applications. L'idée m'est donc venue de réaliser un certain nombre de proof of concept pour ma boite. \r\n\r\nEdwige (not released) permet de lire un modèle Capella (.melodymodeller, XML-based) ainsi qu'un modèle SciLab pour remonter des données depuis ce dernier au modèle d'architecture. Ce poc mené en python puis en java pour réaliser un plugin intégrable à Eclipse Capella a été bien perçu.\r\n\r\nYellow (not released) a été développé comme un exercice pour former quelques collègues au Python. L'objectif, comme pour Edwige, est de lire le modèle Capella. Mais cette fois-ci, pas de mise à jour modèle, juste un affichage des informations (acteurs, operational activities) afin de simuler l'ecriture d'un rapport.\r\n\r\n### Oui, mais Pink alors ? \r\n\r\nPink est basé sur Yellow. Pink répond a deux besoins : \r\n- réaliser le même PoC en Perl\r\n- me permettre de découvrir / progresser en Perl\r\n\r\n### Pink, comment ?\r\n\r\nEn perl+POO. Une classe Pink et deux autres classes Lecteur et Afficheur.\r\nLe Perl devrait permettre de réaliser une classe PinkGUI via TkInter.\r\n\r\n### Authors and Contributors\r\n\r\nAuteurs : @K007024\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}